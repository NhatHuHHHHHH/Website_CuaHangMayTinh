@model IEnumerable<CuaHangMayTinh2.Models.SanPham>
@{
    ViewBag.Title = "SanPham";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}

<style>
    h2 {
        font-family: 'Orbitron', sans-serif;
        color: var(--accent-cyan);
        text-shadow: 0 0 10px rgba(0, 221, 235, 0.5);
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid var(--accent-purple);
        color: var(--text-light);
        border-radius: 5px;
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        background: rgba(255, 255, 255, 0.2);
        border-color: var(--accent-cyan);
        box-shadow: 0 0 10px rgba(0, 221, 235, 0.3);
        color: var(--text-light);
    }

    .btn-primary {
        background: var(--primary-gradient);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: background 0.3s ease;
    }

    .btn-primary:hover {
        background: var(--accent-cyan);
        box-shadow: 0 0 15px rgba(0, 221, 235, 0.5);
    }

    .btn-secondary {
        background: var(--secondary-gradient);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: background 0.3s ease;
    }

    .btn-secondary:hover {
        background: var(--accent-purple);
        box-shadow: 0 0 15px rgba(138, 74, 243, 0.5);
    }

    .btn-info {
        background: var(--accent-cyan);
        border: none;
        transition: background 0.3s ease;
    }

    .btn-info:hover {
        background: #00b7c2;
        box-shadow: 0 0 15px rgba(0, 221, 235, 0.5);
    }

    .btn-warning {
        background: var(--accent-purple);
        border: none;
        transition: background 0.3s ease;
    }

    .btn-warning:hover {
        background: #6f42c1;
        box-shadow: 0 0 15px rgba(138, 74, 243, 0.5);
    }

    .btn-danger {
        background: var(--accent-orange);
        border: none;
        transition: background 0.3s ease;
    }

    .btn-danger:hover {
        background: #e65b50;
        box-shadow: 0 0 15px rgba(255, 111, 97, 0.5);
    }

    .table {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid var(--accent-purple);
        color: var(--text-light);
    }

    .table th {
        background: var(--primary-gradient);
        color: var(--text-light);
        font-weight: 600;
    }

    .table td {
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .table tbody tr:hover {
        background: rgba(255, 255, 255, 0.1);
    }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 5px;
        border: 1px solid var(--accent-purple);
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 5px;
        color: var(--text-light);
    }

    .alert-danger {
        background: rgba(255, 111, 97, 0.2);
        border: 1px solid var(--accent-orange);
    }

    .loading-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid var(--accent-cyan);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Phân trang mới */
    .pagination-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        background-color: #2d3748;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        margin-top: 20px;
    }

    .pagination-info {
        font-size: 14px;
    }

    .pagination {
        display: flex;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .pagination-item {
        margin: 0 2px;
    }

    .pagination-link {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 36px;
        height: 36px;
        padding: 0 10px;
        background-color: #3a4556;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    .pagination-link:hover {
        background-color: #4a5568;
        color: white;
    }

    .pagination-link.active {
        background-color: #007bff;
    }

    .pagination-ellipsis {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 36px;
        height: 36px;
        color: white;
    }
</style>

<h2>Quản lý sản phẩm</h2>

<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<a href="@Url.Action("CreateSanPham")" class="btn btn-primary mb-3">Thêm sản phẩm</a>

<form method="get" class="mb-3" id="searchForm">
    <input type="text" name="search" value="@ViewBag.Search" placeholder="Tìm kiếm sản phẩm..." class="form-control d-inline-block w-auto" />
    <button type="submit" class="btn btn-secondary">Tìm kiếm</button>
</form>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Hình ảnh</th>
            <th>ID</th>
            <th>Tên sản phẩm</th>
            <th>Danh mục</th>
            <th>Giá</th>
            <th>Số lượng kho</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (item.HinhAnhSanPham != null && item.HinhAnhSanPham.Any())
                        {
                            var firstImage = item.HinhAnhSanPham.FirstOrDefault(h => h.LaHinhChinh == true) ?? item.HinhAnhSanPham.First();
                            if (!string.IsNullOrEmpty(firstImage.DuongDanAnh))
                            {
                                <script>
                                    console.log("Đường dẫn hình ảnh (SanPhamID: @item.SanPhamID): @firstImage.DuongDanAnh");
                                </script>
                                <img src="@firstImage.DuongDanAnh" alt="@item.TenSP" class="product-image" loading="lazy" onerror="this.src='/images/products/default.jpg'; console.log('Lỗi tải hình ảnh: @firstImage.DuongDanAnh');" />
                            }
                            else
                            {
                                <span>Không có đường dẫn</span>
                            }
                        }
                        else
                        {
                            <span>Không có hình ảnh</span>
                        }
                    </td>
                    <td>@item.SanPhamID</td>
                    <td>@item.TenSP</td>
                    <td>@(item.DanhMuc != null ? item.DanhMuc.TenDanhMuc : "N/A")</td>
                    <td>@item.Gia.ToString("N0")</td>
                    <td>@item.SoLuongKho</td>
                    <td>@item.TrangThai</td>
                    <td>
                        @if (item.SanPhamID > 0)
                        {
                            <a href="@Url.Action("ViewSanPham", new { id = item.SanPhamID })" class="btn btn-sm btn-info">Xem</a>
                        }
                        else
                        {
                            <span class="text-danger">ID không hợp lệ</span>
                        }
                        <a href="@Url.Action("EditSanPham", new { id = item.SanPhamID })" class="btn btn-sm btn-warning">Sửa</a>
                        <a href="@Url.Action("DeleteSanPham", new { id = item.SanPhamID })" class="btn btn-sm btn-danger" onclick="return confirm('Bạn có chắc muốn xóa?')">Xóa</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-center">Không có sản phẩm nào.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Phân trang mới -->
@if (ViewBag.TotalPages != null && (int)ViewBag.TotalPages > 0)
{
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = (int)ViewBag.TotalPages;
    int totalItems = ViewBag.TotalItems ?? 0;
    int pageSize = ViewBag.PageSize ?? 10;
    int startItem = (currentPage - 1) * pageSize + 1;
    int endItem = Math.Min(currentPage * pageSize, totalItems);

    <div class="pagination-container">
        <div class="pagination-info">
            Đang xem @startItem đến @endItem trong tổng số @totalItems mục
        </div>
        <div>
            <ul class="pagination">
                @if (currentPage > 1)
                {
                    <li class="pagination-item">
                        <a href="@Url.Action("SanPham", new { page = currentPage - 1, search = ViewBag.Search })" class="pagination-link">Trước</a>
                    </li>
                }
                else
                {
                    <li class="pagination-item">
                        <span class="pagination-link" style="opacity: 0.5; cursor: not-allowed;">Trước</span>
                    </li>
                }

                @{
                    const int maxPagesToShow = 5;
                    int startPage = Math.Max(1, currentPage - 2);
                    int endPage = Math.Min(totalPages, startPage + maxPagesToShow - 1);

                    if (endPage - startPage + 1 < maxPagesToShow)
                    {
                        startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                    }

                    // Hiển thị các trang đầu
                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="pagination-item">
                            <a href="@Url.Action("SanPham", new { page = i, search = ViewBag.Search })"
                               class="pagination-link @(i == currentPage ? "active" : "")">@i</a>
                        </li>
                    }

                    // Hiển thị dấu "..." nếu còn nhiều trang phía sau
                    if (endPage < totalPages - 1)
                    {
                        <li class="pagination-item">
                            <span class="pagination-ellipsis">...</span>
                        </li>
                    }

                    // Hiển thị trang cuối cùng nếu không liền kề với các trang đã hiển thị
                    if (endPage < totalPages)
                    {
                        <li class="pagination-item">
                            <a href="@Url.Action("SanPham", new { page = totalPages, search = ViewBag.Search })"
                               class="pagination-link">@totalPages</a>
                        </li>
                    }
                }

                @if (currentPage < totalPages)
                {
                    <li class="pagination-item">
                        <a href="@Url.Action("SanPham", new { page = currentPage + 1, search = ViewBag.Search })" class="pagination-link">Tiếp</a>
                    </li>
                }
                else
                {
                    <li class="pagination-item">
                        <span class="pagination-link" style="opacity: 0.5; cursor: not-allowed;">Tiếp</span>
                    </li>
                }
            </ul>
        </div>
    </div>
}
else
{
    <p>Không có trang nào để hiển thị.</p>
}

<script>
    document.getElementById('searchForm').addEventListener('submit', function () {
        const loadingOverlay = document.getElementById('loadingOverlay');
        loadingOverlay.style.display = 'flex';
    });
</script>
