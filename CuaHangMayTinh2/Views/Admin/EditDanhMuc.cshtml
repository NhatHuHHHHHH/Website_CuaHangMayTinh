@model CuaHangMayTinh2.Models.DanhMuc
@{
    ViewBag.Title = "Chỉnh sửa danh mục";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}

<style>
    /* Font chữ từ Google Fonts */
    import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Exo+2:wght@300;400;600&display=swap');

    /* Định nghĩa biến màu sắc phong cách galaxy */
    :root {
        --galaxy-dark: #0d1b2a; /* Màu nền tối */
        --galaxy-blue: #1b263b; /* Xanh dương đậm */
        --galaxy-purple: #3a0ca3; /* Tím vũ trụ */
        --galaxy-cyan: #00ddeb; /* Cyan sáng */
        --galaxy-orange: #ff6f61; /* Cam điểm nhấn */
        --text-light: #e0e1dd; /* Màu chữ sáng */
        --neon-glow: 0 0 10px rgba(0, 221, 235, 0.5); /* Ánh sáng neon */
        --gradient-galaxy: linear-gradient(135deg, #1b263b, #3a0ca3); /* Gradient galaxy */
    }

    /* Container chính */
    .edit-category-container {
        background: var(--gradient-galaxy);
        border: 2px solid var(--galaxy-purple);
        border-radius: 15px;
        padding: 30px;
        color: var(--text-light);
        position: relative;
        overflow: hidden;
        box-shadow: var(--neon-glow);
        animation: fadeIn 1s ease-in-out;
        max-width: 600px;
        margin: 0 auto;
    }

    /* Hiệu ứng fade-in */
    keyframes fadeIn {
        0% { opacity: 0; transform: translateY(20px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    /* Tiêu đề chính */
    h2 {
        font-family: 'Orbitron', sans-serif;
        font-size: 2.5rem;
        color: var(--galaxy-cyan);
        text-shadow: var(--neon-glow);
        margin-bottom: 40px;
        text-align: center;
        position: relative;
        animation: glow 2s infinite alternate;
    }

    /* Hiệu ứng glow cho tiêu đề */
    keyframes glow {
        0% { text-shadow: 0 0 10px rgba(0, 221, 235, 0.5); }
        100% { text-shadow: 0 0 20px rgba(0, 221, 235, 0.8); }
    }

    /* Form group */
    .form-group {
        margin-bottom: 25px;
    }

    .form-group label {
        font-family: 'Exo 2', sans-serif;
        font-size: 1.1rem;
        color: var(--galaxy-cyan);
        margin-bottom: 8px;
        display: block;
        text-shadow: 0 0 5px rgba(0, 221, 235, 0.3);
    }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid var(--galaxy-purple);
        color: var(--text-light);
        border-radius: 8px;
        padding: 10px;
        font-family: 'Exo 2', sans-serif;
        font-size: 1rem;
        transition: all 0.3s ease;
        width: 100%;
    }

    .form-control:focus {
        background: rgba(255, 255, 255, 0.2);
        border-color: var(--galaxy-cyan);
        box-shadow: var(--neon-glow);
        color: var(--text-light);
    }

    /* Textarea */
    textarea.form-control {
        resize: vertical;
        min-height: 100px;
    }

    /* Nút */
    .btn-primary {
        background: var(--gradient-galaxy);
        border: 2px solid var(--galaxy-purple);
        padding: 12px 25px;
        font-family: 'Exo 2', sans-serif;
        font-weight: 600;
        color: var(--text-light);
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: var(--galaxy-cyan);
        color: var(--galaxy-dark);
        box-shadow: var(--neon-glow);
        border-color: var(--galaxy-cyan);
        transform: translateY(-3px);
    }

    .btn-primary:disabled {
        background: var(--galaxy-blue);
        cursor: not-allowed;
        opacity: 0.6;
    }

    .btn-secondary {
        background: var(--gradient-galaxy);
        border: 2px solid var(--galaxy-purple);
        padding: 12px 25px;
        font-family: 'Exo 2', sans-serif;
        font-weight: 600;
        color: var(--text-light);
        border-radius: 8px;
        transition: all 0.3s ease;
        margin-left: 10px;
    }

    .btn-secondary:hover {
        background: var(--galaxy-orange);
        color: var(--galaxy-dark);
        box-shadow: 0 0 15px rgba(255, 111, 97, 0.5);
        border-color: var(--galaxy-orange);
        transform: translateY(-3px);
    }

    /* Thông báo lỗi */
    .text-danger {
        font-family: 'Exo 2', sans-serif;
        color: var(--galaxy-orange);
        font-size: 0.9rem;
        margin-top: 5px;
        display: block;
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 8px;
        color: var(--text-light);
        font-family: 'Exo 2', sans-serif;
        max-width: 600px;
        margin: 0 auto 20px;
    }

    .alert-danger {
        background: rgba(255, 111, 97, 0.2);
        border: 2px solid var(--galaxy-orange);
        box-shadow: 0 0 10px rgba(255, 111, 97, 0.3);
    }

    /* Hiệu ứng ngôi sao nền */
    .edit-category-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url('https://www.transparenttextures.com/patterns/stardust.png') repeat;
        opacity: 0.1;
        z-index: -1;
        animation: starfield 50s linear infinite;
    }

    keyframes starfield {
        0% { background-position: 0 0; }
        100% { background-position: 1000px 1000px; }
    }

    /* Loading overlay */
    .loading-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid var(--galaxy-cyan);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

<h2>Chỉnh sửa danh mục</h2>

<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
</div>

@if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    </div>
}

<div class="edit-category-container">
    @using (Html.BeginForm("EditDanhMuc", "Admin", FormMethod.Post, new { id = "editDanhMucForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.DanhMucID)

        <div class="form-group">
            @Html.LabelFor(model => model.TenDanhMuc, "Tên danh mục")
            @Html.EditorFor(model => model.TenDanhMuc, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.TenDanhMuc, "", new { @class = "text-danger" })
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary" id="submitButton">Lưu thay đổi</button>
            <a href="@Url.Action("DanhMuc")" class="btn btn-secondary">Quay lại</a>
        </div>
    }
</div>

<script>
    document.getElementById('editDanhMucForm').addEventListener('submit', function (e) {
        const form = this;
        const submitButton = document.getElementById('submitButton');
        const loadingOverlay = document.getElementById('loadingOverlay');

        if (form.checkValidity()) {
            console.log("Form hợp lệ, đang submit...");
            submitButton.disabled = true;
            loadingOverlay.style.display = 'flex';
        } else {
            console.log("Form không hợp lệ");
            e.preventDefault();
            form.reportValidity();
        }
    });

    window.onload = function () {
        const hasErrors = document.querySelector('.validation-summary-errors')?.children.length > 0;
        if (hasErrors) {
            console.log("Có lỗi từ server");
            const loadingOverlay = document.getElementById('loadingOverlay');
            loadingOverlay.style.display = 'none';
            document.getElementById('submitButton').disabled = false;
        }
    };
</script>