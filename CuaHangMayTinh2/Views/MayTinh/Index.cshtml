@model List<CuaHangMayTinh2.Models.SanPham>
@using System.Linq

@{
    ViewBag.Title = "Trang chủ - TechZone";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var danhMucId = ViewContext.RouteData.Values["danhMucId"] as string ?? "";
    // Lấy danh sách sản phẩm yêu thích của khách hàng hiện tại
    var khachHangId = Session["KhachHangID"] != null ? Convert.ToInt32(Session["KhachHangID"]) : (int?)null;
    var sanPhamYeuThichList = khachHangId != null ? ViewBag.SanPhamYeuThichList as List<CuaHangMayTinh2.Models.SanPhamYeuThich> : new List<CuaHangMayTinh2.Models.SanPhamYeuThich>();
}

@functions {
    public static string GetImagePath(ICollection<CuaHangMayTinh2.Models.HinhAnhSanPham> images)
    {
        if (images == null || !images.Any())
        {
            return "/images/default.jpg";
        }

        var mainImage = images.FirstOrDefault(x => x.LaHinhChinh == true);
        if (mainImage != null && !string.IsNullOrEmpty(mainImage.DuongDanAnh))
        {
            return mainImage.DuongDanAnh;
        }

        var firstImage = images.FirstOrDefault();
        return firstImage != null && !string.IsNullOrEmpty(firstImage.DuongDanAnh)
            ? firstImage.DuongDanAnh
            : "/images/default.jpg";
    }
}

<div class="container py-5">
    <!-- Danh mục sản phẩm -->
    <section class="mb-5 text-center">
        <h2 class="section-title mb-4" style="color: #2c3e50; font-family: 'Poppins', sans-serif;">
            <span>Danh mục sản phẩm</span>
        </h2>
        <div class="d-flex flex-wrap justify-content-center gap-2">
            @foreach (var danhMuc in ViewBag.DanhMucList)
            {
                <a href="@Url.Action("Index", "MayTinh", new { danhMucId = danhMuc.DanhMucID })"
                   class="btn btn-outline-primary btn-custom m-1 rounded-pill text-dark fw-semibold transition-hover py-2 px-3">
                    @danhMuc.TenDanhMuc
                </a>
            }
            <a href="@Url.Action("Index", "MayTinh")"
               class="btn btn-outline-primary btn-custom m-1 rounded-pill text-dark fw-semibold transition-hover py-2 px-3">
                Tất cả
            </a>
        </div>
    </section>

    <!-- Tất cả sản phẩm -->
    <section class="mb-5">
        <h2 class="section-title text-center mb-4" style="color: #2c3e50; font-family: 'Poppins', sans-serif;">
            <span>Tất cả sản phẩm</span>
        </h2>
        <div id="sanPhamList" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 justify-content-center">
            @foreach (var item in Model)
            {
                var isLiked = khachHangId != null && sanPhamYeuThichList.Any(spyt => spyt.SanPhamID == item.SanPhamID);
                <div class="col mb-4">
                    <div class="card h-100 shadow-sm product-card">
                        <div class="position-relative">
                            <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })">
                                <img src="@GetImagePath(item.HinhAnhSanPham)"
                                     class="card-img-top product-image"
                                     alt="@item.TenSP"
                                     onerror="this.src='/images/default.jpg';">
                            </a>
                            <div class="wishlist-icon position-absolute top-0 end-0 m-2">
                                <button class="btn btn-light rounded-circle p-2 btn-sm wishlist-toggle"
                                        data-id="@item.SanPhamID"
                                        data-liked="@(isLiked ? "true" : "false")">
                                    <i class="bi @(isLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="text-decoration-none text-dark">
                                    @item.TenSP
                                </a>
                            </h5>
                            <p class="card-text text-muted product-description">
                                @(string.IsNullOrEmpty(item.MoTa) ? "Không có mô tả" : item.MoTa.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                            </p>
                            <div class="price mb-2 text-danger fw-bold">@String.Format("{0:N0}", item.Gia) đ</div>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span class="text-muted ms-1">@(item.DanhGia.HasValue ? item.DanhGia.Value.ToString("F1") : "0.0")</span>
                                </div>
                                <div class="views">
                                    <i class="bi bi-eye-fill text-primary"></i>
                                    <span class="text-muted ms-1">@item.LuotXem</span>
                                </div>
                            </div>
                            <div class="mt-auto d-flex gap-2">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="btn btn-info text-white flex-fill">
                                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                                </a>
                                <button class="btn btn-primary flex-fill add-to-cart" data-id="@item.SanPhamID">
                                    <i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="text-center mt-4">
            <button id="loadMore" class="btn btn-primary btn-lg rounded-pill px-4 py-2 transition-hover"
                    data-skip="@Model.Count" data-take="8" data-danhmucid="@danhMucId">
                <i class="bi bi-plus-circle me-2"></i>Xem thêm
            </button>
        </div>
    </section>

    <!-- Sản phẩm nổi bật -->
    <section class="mb-5">
        <h2 class="section-title text-center mb-4" style="color: #2c3e50; font-family: 'Poppins', sans-serif;">
            <span>Sản phẩm nổi bật</span>
        </h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 justify-content-center">
            @foreach (var item in (List<CuaHangMayTinh2.Models.SanPham>)ViewBag.SanPhamNoiBat)
            {
                var isLiked = khachHangId != null && sanPhamYeuThichList.Any(spyt => spyt.SanPhamID == item.SanPhamID);
                <div class="col mb-4">
                    <div class="card h-100 shadow-sm product-card position-relative">
                        <span class="badge bg-danger position-absolute top-0 start-0 m-2">Hot</span>
                        <div class="position-relative">
                            <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })">
                                <img src="@GetImagePath(item.HinhAnhSanPham)"
                                     class="card-img-top product-image"
                                     alt="@item.TenSP"
                                     onerror="this.src='/images/default.jpg';">
                            </a>
                            <div class="wishlist-icon position-absolute top-0 end-0 m-2">
                                <button class="btn btn-light rounded-circle p-2 btn-sm wishlist-toggle"
                                        data-id="@item.SanPhamID"
                                        data-liked="@(isLiked ? "true" : "false")">
                                    <i class="bi @(isLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="text-decoration-none text-dark">
                                    @item.TenSP
                                </a>
                            </h5>
                            <p class="card-text text-muted product-description">
                                @(string.IsNullOrEmpty(item.MoTa) ? "Không có mô tả" : item.MoTa.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                            </p>
                            <div class="price mb-2 text-danger fw-bold">@String.Format("{0:N0}", item.Gia) đ</div>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span class="text-muted ms-1">@(item.DanhGia.HasValue ? item.DanhGia.Value.ToString("F1") : "0.0")</span>
                                </div>
                                <div class="views">
                                    <i class="bi bi-eye-fill text-primary"></i>
                                    <span class="text-muted ms-1">@item.LuotXem</span>
                                </div>
                            </div>
                            <div class="mt-auto d-flex gap-2">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="btn btn-info text-white flex-fill">
                                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                                </a>
                                <button class="btn btn-primary flex-fill add-to-cart" data-id="@item.SanPhamID">
                                    <i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <!-- Sản phẩm nhiều lượt yêu thích -->
    <section class="mb-5">
        <h2 class="section-title text-center mb-4" style="color: #2c3e50; font-family: 'Poppins', sans-serif;">
            <span>Sản phẩm nhiều lượt yêu thích</span>
        </h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 justify-content-center">
            @foreach (var item in (List<CuaHangMayTinh2.Models.SanPham>)ViewBag.SanPhamYeuThich)
            {
                var isLiked = khachHangId != null && sanPhamYeuThichList.Any(spyt => spyt.SanPhamID == item.SanPhamID);
                <div class="col mb-4">
                    <div class="card h-100 shadow-sm product-card position-relative">
                        <span class="badge bg-danger position-absolute top-0 start-0 m-2">
                            <i class="bi bi-heart-fill me-1"></i>Top
                        </span>
                        <div class="position-relative">
                            <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })">
                                <img src="@GetImagePath(item.HinhAnhSanPham)"
                                     class="card-img-top product-image"
                                     alt="@item.TenSP"
                                     onerror="this.src='/images/default.jpg';">
                            </a>
                            <div class="wishlist-icon position-absolute top-0 end-0 m-2">
                                <button class="btn btn-light rounded-circle p-2 btn-sm wishlist-toggle"
                                        data-id="@item.SanPhamID"
                                        data-liked="@(isLiked ? "true" : "false")">
                                    <i class="bi @(isLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="text-decoration-none text-dark">
                                    @item.TenSP
                                </a>
                            </h5>
                            <p class="card-text text-muted product-description">
                                @(string.IsNullOrEmpty(item.MoTa) ? "Không có mô tả" : item.MoTa.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                            </p>
                            <div class="price mb-2 text-danger fw-bold">@String.Format("{0:N0}", item.Gia) đ</div>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span class="text-muted ms-1">@(item.DanhGia.HasValue ? item.DanhGia.Value.ToString("F1") : "0.0")</span>
                                </div>
                                <div class="views">
                                    <i class="bi bi-eye-fill text-primary"></i>
                                    <span class="text-muted ms-1">@item.LuotXem</span>
                                </div>
                            </div>
                            <div class="mt-auto d-flex gap-2">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="btn btn-info text-white flex-fill">
                                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                                </a>
                                <button class="btn btn-primary flex-fill add-to-cart" data-id="@item.SanPhamID">
                                    <i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <!-- Sản phẩm nhiều lượt xem -->
    <section class="mb-5">
        <h2 class="section-title text-center mb-4" style="color: #2c3e50; font-family: 'Poppins', sans-serif;">
            <span>Sản phẩm nhiều lượt xem</span>
        </h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 justify-content-center">
            @foreach (var item in (List<CuaHangMayTinh2.Models.SanPham>)ViewBag.SanPhamXemNhieu)
            {
                var isLiked = khachHangId != null && sanPhamYeuThichList.Any(spyt => spyt.SanPhamID == item.SanPhamID);
                <div class="col mb-4">
                    <div class="card h-100 shadow-sm product-card position-relative">
                        <span class="badge bg-info position-absolute top-0 start-0 m-2">
                            <i class="bi bi-eye-fill me-1"></i>Popular
                        </span>
                        <div class="position-relative">
                            <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })">
                                <img src="@GetImagePath(item.HinhAnhSanPham)"
                                     class="card-img-top product-image"
                                     alt="@item.TenSP"
                                     onerror="this.src='/images/default.jpg';">
                            </a>
                            <div class="wishlist-icon position-absolute top-0 end-0 m-2">
                                <button class="btn btn-light rounded-circle p-2 btn-sm wishlist-toggle"
                                        data-id="@item.SanPhamID"
                                        data-liked="@(isLiked ? "true" : "false")">
                                    <i class="bi @(isLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="text-decoration-none text-dark">
                                    @item.TenSP
                                </a>
                            </h5>
                            <p class="card-text text-muted product-description">
                                @(string.IsNullOrEmpty(item.MoTa) ? "Không có mô tả" : item.MoTa.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                            </p>
                            <div class="price mb-2 text-danger fw-bold">@String.Format("{0:N0}", item.Gia) đ</div>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span class="text-muted ms-1">@(item.DanhGia.HasValue ? item.DanhGia.Value.ToString("F1") : "0.0")</span>
                                </div>
                                <div class="views">
                                    <i class="bi bi-eye-fill text-primary"></i>
                                    <span class="text-muted ms-1">@item.LuotXem</span>
                                </div>
                            </div>
                            <div class="mt-auto d-flex gap-2">
                                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="btn btn-info text-white flex-fill">
                                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                                </a>
                                <button class="btn btn-primary flex-fill add-to-cart" data-id="@item.SanPhamID">
                                    <i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
</div>

<!-- Thêm partial view modal thêm vào giỏ hàng -->
@Html.Partial("_AddToCartModal")

<!-- Phần tử ảo để tạo hiệu ứng bay vào giỏ hàng -->
<div id="flyToCartElement" class="d-none"></div>

<!-- Toast Container -->
<div class="toast-container"></div>

<style>
    import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f8f9fa;
    }

    .section-title {
        position: relative;
        font-size: 2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 2rem;
    }

        .section-title span {
            background: linear-gradient(90deg, #3498db, #8e44ad);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            padding: 0 10px;
        }

        .section-title::after {
            content: '';
            position: absolute;
            left: 50%;
            bottom: -10px;
            width: 50px;
            height: 4px;
            background: linear-gradient(90deg, #3498db, #8e44ad);
            transform: translateX(-50%);
            border-radius: 2px;
        }

    .btn-custom {
        transition: all 0.3s ease;
        border-width: 2px;
        padding: 0.5rem 1.5rem;
    }

    .transition-hover {
        transition: all 0.3s ease;
    }

        .transition-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

    .btn-primary {
        background: linear-gradient(90deg, #3498db, #2980b9);
        border: none;
        color: white;
        font-weight: 500;
        padding: 0.5rem;
    }

        .btn-primary:hover {
            background: linear-gradient(90deg, #2980b9, #1e6fa1);
            color: white;
        }

    .btn-info {
        background-color: #17a2b8;
        border: none;
        color: white;
        font-weight: 500;
        padding: 0.5rem;
    }

        .btn-info:hover {
            background-color: #138496;
            color: white;
        }

    .btn-success {
        background-color: #28a745;
        border: none;
        color: white;
        font-weight: 500;
        padding: 0.5rem;
    }

        .btn-success:hover {
            background-color: #218838;
            color: white;
        }

    .product-card {
        border: none;
        border-radius: 10px;
        overflow: hidden;
        background: #ffffff;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(52, 152, 219, 0.2);
        }

    .product-image {
        height: 200px;
        object-fit: contain;
        padding: 1rem;
        background-color: #f8f9fa;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        height: 2.5rem;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .product-description {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin-bottom: 0.75rem;
        height: 2rem;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        flex-grow: 1;
    }

    .price {
        font-size: 1.25rem;
        color: #e74c3c;
        font-weight: 600;
        margin-bottom: 0.75rem;
    }

    .rating, .views {
        display: flex;
        align-items: center;
        font-size: 0.9rem;
        color: #7f8c8d;
    }

        .rating i {
            color: #ffc107;
            margin-right: 0.25rem;
        }

        .views i {
            color: #3498db;
            margin-right: 0.25rem;
        }

    .wishlist-toggle {
        transition: all 0.2s ease;
    }

        .wishlist-toggle:hover {
            color: #e74c3c;
        }

    .flex-fill {
        flex: 1;
    }

    media (max-width: 767.98px) {
        .section-title

    {
        font-size: 1.75rem;
    }

    .product-image {
        height: 150px;
    }

    .product-title {
        font-size: 1rem;
    }

    .price {
        font-size: 1.1rem;
    }

    .mt-auto.d-flex {
        flex-direction: column;
        gap: 0.5rem;
    }

    .btn {
        width: 100%;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
    }

    }

    media (min-width: 768px) and (max-width: 991.98px) {
        .row-cols-lg-4

    {
        row-gap: 1.5rem;
    }

    }

    /* Toast Notification Styles */
    .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1060;
    }

    .toast {
        background-color: white;
        color: #333;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        border-left: 4px solid #3498db;
        max-width: 350px;
        animation: slideIn 0.3s ease-out forwards;
    }

        .toast.success {
            border-left-color: #28a745;
        }

        .toast.error {
            border-left-color: #dc3545;
        }

        .toast.warning {
            border-left-color: #ffc107;
        }

    .toast-icon {
        margin-right: 10px;
        font-size: 1.25rem;
    }

    .toast-content {
        flex: 1;
    }

    .toast-title {
        font-weight: 600;
        margin-bottom: 5px;
    }

    .toast-close {
        background: transparent;
        border: none;
        color: #aaa;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0;
        margin-left: 10px;
    }

    keyframes slideIn {
        from

    {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }

    keyframes fadeOut {
        from

    {
        opacity: 1;
    }

    to {
        opacity: 0;
    }

    }

    /* Fly to Cart Animation */
    #flyToCartElement {
        position: fixed;
        z-index: 9999;
        width: 50px;
        height: 50px;
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        border-radius: 50%;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        pointer-events: none;
    }

    /* Animation for Add to Cart Success */
    keyframes addedToCart {
        0%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.1);
    }

    100% {
        transform: scale(1);
    }

    }

    .added-to-cart {
        animation: addedToCart 0.5s ease;
    }
</style>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            // Toast notification function
            function showToast(message, type = 'info', title = null, duration = 3000) {
                const icons = {
                    'success': 'bi-check-circle-fill text-success',
                    'error': 'bi-exclamation-circle-fill text-danger',
                    'warning': 'bi-exclamation-triangle-fill text-warning',
                    'info': 'bi-info-circle-fill text-primary'
                };

                const toast = $(`
                    <div class="toast ${type}">
                        <div class="toast-icon">
                            <i class="bi ${icons[type]}"></i>
                        </div>
                        <div class="toast-content">
                            ${title ? `<div class="toast-title">${title}</div>` : ''}
                            <div class="toast-message">${message}</div>
                        </div>
                        <button class="toast-close">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                `);

                $('.toast-container').append(toast);

                // Close toast on click
                toast.find('.toast-close').on('click', function() {
                    toast.css('animation', 'fadeOut 0.3s forwards');
                    setTimeout(() => {
                        toast.remove();
                    }, 300);
                });

                // Auto close after duration
                setTimeout(() => {
                    toast.css('animation', 'fadeOut 0.3s forwards');
                    setTimeout(() => {
                        toast.remove();
                    }, 300);
                }, duration);
            }

            // Load more products
            $("#loadMore").click(function () {
                var button = $(this);
                var skip = parseInt(button.data("skip"));
                var take = parseInt(button.data("take"));
                var danhMucId = button.data("danhmucid") || "";

                console.log("Click   - Skip: " + skip + ", Take: " + take + ", DanhMucId: " + danhMucId);

                $.ajax({
                    url: '@Url.Action("LoadMoreProducts", "MayTinh")',
                    type: 'GET',
                    data: { skip: skip, take: take, danhMucId: danhMucId },
                    success: function (data) {
                        console.log("Success - Data received:", data);
                        if (data && data.trim() !== '') {
                            $("#sanPhamList").append(data);
                            button.data("skip", skip + take);
                            showToast('Đã tải thêm sản phẩm', 'success');
                        } else {
                            button.hide();
                            showToast('Không còn sản phẩm để hiển thị', 'info');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error - Status: " + status + ", Error: " + error + ", Response: " + xhr.responseText);
                        showToast('Đã có lỗi xảy ra khi tải thêm sản phẩm', 'error');
                    }
                });
            });

            // Wishlist toggle
            $(document).on('click', '.wishlist-toggle', function () {
                var button = $(this);
                var icon = button.find('i');
                var productId = button.data('id');
                var isLiked = button.data('liked') === true;

                console.log("Wishlist toggle clicked - ProductID:", productId, "IsLiked:", isLiked);

                $.ajax({
                    url: '@Url.Action("ToggleWishlist", "KhachHang")',
                    type: 'POST',
                    data: { sanPhamId: productId },
                    success: function (response) {
                        console.log("Toggle wishlist response:", response);
                        if (response.success) {
                            // Cập nhật trạng thái nút
                            if (response.liked) {
                                icon.removeClass('bi-heart').addClass('bi-heart-fill text-danger');
                                button.data('liked', true);
                                showToast('Đã thêm vào danh sách yêu thích', 'success');
                            } else {
                                icon.removeClass('bi-heart-fill text-danger').addClass('bi-heart');
                                button.data('liked', false);
                                showToast('Đã xóa khỏi danh sách yêu thích', 'info');
                            }
                        } else {
                            showToast(response.message, 'warning');
                            if (response.redirect) {
                                window.location.href = response.redirect;
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", xhr.responseText, status, error);
                        showToast('Đã xảy ra lỗi, vui lòng thử lại!', 'error');
                    }
                });
            });

            // Thêm vào giỏ hàng - Mở modal thay vì thêm trực tiếp
            $(document).on('click', '.add-to-cart', function (e) {
                e.preventDefault();
                var button = $(this);
                var productId = button.data('id');
                console.log("Add to cart clicked - ProductID:", productId);

                // Lấy thông tin sản phẩm và hiển thị modal
                loadProductDetailsForCart(productId);
            });

            // Hàm lấy thông tin sản phẩm cho modal giỏ hàng
            function loadProductDetailsForCart(productId) {
                $.ajax({
                    url: '@Url.Action("GetProductDetails", "MayTinh")',
                    type: 'GET',
                    data: { id: productId },
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật thông tin trong modal
                            $('#cartModalProductName').text(response.tenSP);
                            $('#cartModalProductPrice').text(response.giaFormatted);
                            $('#cartModalProductStock').text(response.soLuongKho);
                            $('#cartModalProductImage').attr('src', response.hinhAnh);

                            // Reset số lượng về 1
                            $('#cartModalQuantity').val(1);

                            // Cập nhật max số lượng
                            $('#cartModalQuantity').attr('max', response.soLuongKho);

                            // Lưu productId vào nút xác nhận
                            $('#confirmAddToCart').data('id', productId);

                            // Cập nhật tổng tiền
                            updateTotalPrice();

                            // Hiển thị modal
                            $('#addToCartModal').modal('show');
                        } else {
                            showToast(response.message, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", xhr.responseText, status, error);
                        showToast('Đã xảy ra lỗi, vui lòng thử lại!', 'error');
                    }
                });
            }

            // Hàm tính tổng tiền
            function updateTotalPrice() {
                var price = parseFloat($('#cartModalProductPrice').text().replace(/[^\d]/g, ''));
                var quantity = parseInt($('#cartModalQuantity').val());

                if (!isNaN(price) && !isNaN(quantity)) {
                    var totalPrice = price * quantity;
                    $('#cartModalTotalPrice').text(totalPrice.toLocaleString('vi-VN') + ' đ');
                }
            }

            // Hàm tạo hiệu ứng bay vào giỏ hàng
            function flyToCart(imgElement) {
                // Lấy vị trí của hình ảnh sản phẩm
                var imgPosition = imgElement.offset();
                var imgWidth = imgElement.width();
                var imgHeight = imgElement.height();

                // Lấy vị trí của giỏ hàng
                var cartIcon = $('.cart-badge');
                var cartPosition = cartIcon.offset();

                // Nếu không tìm thấy giỏ hàng, thoát
                if (!cartPosition) return;

                // Tạo phần tử bay
                var flyElement = $('#flyToCartElement');
                flyElement.css({
                    'background-image': 'url(' + imgElement.attr('src') + ')',
                    'top': imgPosition.top,
                    'left': imgPosition.left,
                    'width': imgWidth * 0.3,
                    'height': imgHeight * 0.3,
                    'opacity': 1,
                    'display': 'block'
                });

                // Tạo hiệu ứng bay
                flyElement.animate({
                    top: cartPosition.top,
                    left: cartPosition.left,
                    width: 20,
                    height: 20,
                    opacity: 0.7
                }, 800, 'easeOutQuart', function() {
                    // Khi bay đến nơi, tạo hiệu ứng nhấp nháy cho giỏ hàng
                    cartIcon.addClass('added-to-cart');

                    // Ẩn phần tử bay
                    flyElement.hide();

                    // Xóa class sau khi hoàn thành animation
                    setTimeout(function() {
                        cartIcon.removeClass('added-to-cart');
                    }, 500);
                });
            }

            // Xử lý xác nhận thêm vào giỏ hàng từ modal
            $(document).on('click', '#confirmAddToCart', function() {
                var productId = $(this).data('id');
                var quantity = parseInt($('#cartModalQuantity').val());

                if (isNaN(quantity) || quantity < 1) {
                    $('#cartQuantityError').text('Số lượng không hợp lệ').removeClass('d-none');
                    return;
                }

                // Tạo hiệu ứng bay vào giỏ hàng
                flyToCart($('#cartModalProductImage'));

                // Gọi API thêm vào giỏ hàng với số lượng
                $.ajax({
                    url: '@Url.Action("AddToCartWithQuantity", "GioHang")',
                    type: 'POST',
                    data: { productId: productId, quantity: quantity },
                    success: function (response) {
                        if (response.success) {
                            // Đóng modal
                            $('#addToCartModal').modal('hide');

                            // Cập nhật số lượng sản phẩm trong giỏ hàng
                            var currentCount = parseInt($('.cart-badge').text()) || 0;
                            $('.cart-badge').text(response.totalItems);

                            // Hiển thị thông báo thành công
                            showToast(response.message, 'success', 'Thêm vào giỏ hàng');

                            // Tìm nút "Thêm vào giỏ" tương ứng và cập nhật giao diện
                            var addToCartButton = $('.add-to-cart[data-id="' + productId + '"]');
                            addToCartButton.addClass('btn-success').removeClass('btn-primary');
                            addToCartButton.html('<i class="bi bi-check-lg me-2"></i>Đã thêm');
                            setTimeout(function () {
                                addToCartButton.removeClass('btn-success').addClass('btn-primary');
                                addToCartButton.html('<i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ');
                            }, 1500);
                        } else {
                            showToast(response.message, 'error', 'Lỗi');
                            if (response.redirect) {
                                window.location.href = response.redirect;
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", xhr.responseText, status, error);
                        showToast('Đã xảy ra lỗi, vui lòng thử lại!', 'error');
                    }
                });
            });

            // Xử lý tăng giảm số lượng trong modal
            $(document).on('click', '#cartIncreaseQuantity', function() {
                var currentVal = parseInt($('#cartModalQuantity').val());
                var maxVal = parseInt($('#cartModalQuantity').attr('max'));
                if (currentVal < maxVal) {
                    $('#cartModalQuantity').val(currentVal + 1);
                    $('#cartQuantityError').addClass('d-none');
                } else {
                    $('#cartQuantityError').text('Số lượng đã đạt tối đa trong kho').removeClass('d-none');
                }
                updateTotalPrice();
            });

            $(document).on('click', '#cartDecreaseQuantity', function() {
                var currentVal = parseInt($('#cartModalQuantity').val());
                if (currentVal > 1) {
                    $('#cartModalQuantity').val(currentVal - 1);
                    $('#cartQuantityError').addClass('d-none');
                }
                updateTotalPrice();
            });

            // Kiểm tra số lượng khi nhập trực tiếp
            $(document).on('input', '#cartModalQuantity', function() {
                var currentVal = parseInt($(this).val());
                var maxVal = parseInt($(this).attr('max'));

                if (isNaN(currentVal) || currentVal < 1) {
                    $('#cartQuantityError').text('Số lượng phải lớn hơn 0').removeClass('d-none');
                } else if (currentVal > maxVal) {
                    $('#cartQuantityError').text('Số lượng vượt quá tồn kho').removeClass('d-none');
                    $(this).val(maxVal);
                } else {
                    $('#cartQuantityError').addClass('d-none');
                }
                updateTotalPrice();
            });
        });
    </script>
}