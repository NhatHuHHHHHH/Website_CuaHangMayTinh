@model Tuple<List<CuaHangMayTinh2.Models.SanPham>, List<CuaHangMayTinh2.Models.SanPhamYeuThich>>

@{
    var sanPhamList = Model.Item1;
    var sanPhamYeuThichList = Model.Item2;
    var khachHangId = Session["KhachHangID"] != null ? Convert.ToInt32(Session["KhachHangID"]) : (int?)null;
}

@functions {
    public static string GetImagePath(int sanPhamId, Dictionary<int, string> hinhAnhChinhDict)
    {
        return hinhAnhChinhDict.ContainsKey(sanPhamId) ? hinhAnhChinhDict[sanPhamId] : "/images/default.jpg";
    }
}

@foreach (var item in sanPhamList)
{
    var isLiked = khachHangId != null && sanPhamYeuThichList.Any(spyt => spyt.SanPhamID == item.SanPhamID);
    <div class="col mb-4">
        <div class="card h-100 shadow-sm product-card">
            <div class="position-relative">
                <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })">
                    <img src="@GetImagePath(item.SanPhamID, (Dictionary<int, string>)ViewBag.HinhAnhChinhDict)"
                         class="card-img-top product-image"
                         alt="@item.TenSP"
                         onerror="this.src='/images/default.jpg';">
                </a>
                <div class="wishlist-icon position-absolute top-0 end-0 m-2">
                    <button class="btn btn-light rounded-circle p-2 btn-sm wishlist-toggle"
                            data-id="@item.SanPhamID"
                            data-liked="@(isLiked ? "true" : "false")">
                        <i class="bi @(isLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                    </button>
                </div>
            </div>
            <div class="card-body d-flex flex-column">
                <h5 class="card-title product-title">
                    <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="text-decoration-none text-dark">
                        @item.TenSP
                    </a>
                </h5>
                <p class="card-text text-muted product-description">
                    @(string.IsNullOrEmpty(item.MoTa) ? "Không có mô tả" : item.MoTa.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                </p>
                <div class="price mb-2 text-danger fw-bold">@String.Format("{0:N0}", item.Gia) đ</div>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div class="rating">
                        <i class="bi bi-star-fill text-warning"></i>
                        <span class="text-muted ms-1">@(item.DanhGia.HasValue ? item.DanhGia.Value.ToString("F1") : "0.0")</span>
                    </div>
                    <div class="views">
                        <i class="bi bi-eye-fill text-primary"></i>
                        <span class="text-muted ms-1">@item.LuotXem</span>
                    </div>
                </div>
                <div class="mt-auto d-flex gap-2">
                    <a href="@Url.Action("Details", "MayTinh", new { id = item.SanPhamID })" class="btn btn-info text-white flex-fill">
                        <i class="bi bi-eye me-1"></i>Xem chi tiết
                    </a>
                    <button class="btn btn-primary flex-fill add-to-cart" data-id="@item.SanPhamID">
                        <i class="bi bi-cart-plus me-1"></i>Thêm vào giỏ
                    </button>
                </div>
            </div>
        </div>
    </div>
}